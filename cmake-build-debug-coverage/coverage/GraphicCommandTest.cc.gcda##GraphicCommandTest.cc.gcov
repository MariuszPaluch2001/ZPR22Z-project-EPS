        -:    0:Source:/home/kacper/Pulpit/zpr_eps/tests/GraphicCommandTest.cc
        -:    0:Graph:/home/kacper/Pulpit/zpr_eps/cmake-build-debug-coverage/tests/CMakeFiles/GraphicCommandTest.dir/GraphicCommandTest.cc.gcno
        -:    0:Data:/home/kacper/Pulpit/zpr_eps/cmake-build-debug-coverage/tests/CMakeFiles/GraphicCommandTest.dir/GraphicCommandTest.cc.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by kacper on 04.12.2022.
        -:    3://
        -:    4:#include "GraphicCommands.h"
        -:    5:#include <gtest/gtest.h>
        -:    6:#include <cmath>
        -:    7:
        4:    8:TEST(GraphicCommandTest, TestCreateLeftLine) {
        1:    9:  auto _ = LeftLineCommand({1, 2});
        1:   10:}
------------------
_ZN42GraphicCommandTest_TestCreateLeftLine_TestC2Ev:
        1:    8:TEST(GraphicCommandTest, TestCreateLeftLine) {
        1:    8-block  0
------------------
_ZN42GraphicCommandTest_TestCreateLeftLine_TestD0Ev:
        1:    8:TEST(GraphicCommandTest, TestCreateLeftLine) {
        1:    8-block  0
------------------
_ZN42GraphicCommandTest_TestCreateLeftLine_TestD2Ev:
        1:    8:TEST(GraphicCommandTest, TestCreateLeftLine) {
        1:    8-block  0
------------------
_ZN42GraphicCommandTest_TestCreateLeftLine_Test8TestBodyEv:
        1:    8:TEST(GraphicCommandTest, TestCreateLeftLine) {
        1:    9:  auto _ = LeftLineCommand({1, 2});
        1:    9-block  0
        1:   10:}
------------------
        -:   11:
        4:   12:TEST(GraphicCommandTest, TestLeftLinePointGetter) {
        1:   13:  auto l = LeftLineCommand({1, 2});
        1:   14:  auto p = l.getMovePoint();
       1*:   15:  ASSERT_EQ(p.getX(), 1);
       1*:   16:  ASSERT_EQ(p.getY(), 2);
        1:   17:}
------------------
_ZN47GraphicCommandTest_TestLeftLinePointGetter_TestC2Ev:
        1:   12:TEST(GraphicCommandTest, TestLeftLinePointGetter) {
        1:   12-block  0
------------------
_ZN47GraphicCommandTest_TestLeftLinePointGetter_TestD0Ev:
        1:   12:TEST(GraphicCommandTest, TestLeftLinePointGetter) {
        1:   12-block  0
------------------
_ZN47GraphicCommandTest_TestLeftLinePointGetter_TestD2Ev:
        1:   12:TEST(GraphicCommandTest, TestLeftLinePointGetter) {
        1:   12-block  0
------------------
_ZN47GraphicCommandTest_TestLeftLinePointGetter_Test8TestBodyEv:
        1:   12:TEST(GraphicCommandTest, TestLeftLinePointGetter) {
        1:   13:  auto l = LeftLineCommand({1, 2});
        1:   13-block  0
        1:   14:  auto p = l.getMovePoint();
       1*:   15:  ASSERT_EQ(p.getX(), 1);
        1:   15-block  0
    %%%%%:   15-block  1
    %%%%%:   15-block  2
    %%%%%:   15-block  3
    %%%%%:   15-block  4
        1:   15-block  5
        1:   15-block  6
    $$$$$:   15-block  7
    $$$$$:   15-block  8
    $$$$$:   15-block  9
    $$$$$:   15-block 10
    $$$$$:   15-block 11
    $$$$$:   15-block 12
    $$$$$:   15-block 13
       1*:   16:  ASSERT_EQ(p.getY(), 2);
        1:   16-block  0
        1:   16-block  1
    %%%%%:   16-block  2
    %%%%%:   16-block  3
    %%%%%:   16-block  4
    %%%%%:   16-block  5
        1:   16-block  6
        1:   16-block  7
    $$$$$:   16-block  8
    $$$$$:   16-block  9
    $$$$$:   16-block 10
    $$$$$:   16-block 11
    $$$$$:   16-block 12
    $$$$$:   16-block 13
    $$$$$:   16-block 14
        1:   17:}
        1:   17-block  0
        1:   17-block  1
    $$$$$:   17-block  2
------------------
        -:   18:
        4:   19:TEST(GraphicCommandTest, TestLeftLineStringForm) {
        1:   20:  auto l = LeftLineCommand({1, 2});
       2*:   21:  ASSERT_EQ(l.toString(), std::string("1 2 lineto"));
        1:   22:}
------------------
_ZN46GraphicCommandTest_TestLeftLineStringForm_TestC2Ev:
        1:   19:TEST(GraphicCommandTest, TestLeftLineStringForm) {
        1:   19-block  0
------------------
_ZN46GraphicCommandTest_TestLeftLineStringForm_TestD0Ev:
        1:   19:TEST(GraphicCommandTest, TestLeftLineStringForm) {
        1:   19-block  0
------------------
_ZN46GraphicCommandTest_TestLeftLineStringForm_TestD2Ev:
        1:   19:TEST(GraphicCommandTest, TestLeftLineStringForm) {
        1:   19-block  0
------------------
_ZN46GraphicCommandTest_TestLeftLineStringForm_Test8TestBodyEv:
        1:   19:TEST(GraphicCommandTest, TestLeftLineStringForm) {
        1:   20:  auto l = LeftLineCommand({1, 2});
        1:   20-block  0
       2*:   21:  ASSERT_EQ(l.toString(), std::string("1 2 lineto"));
        1:   21-block  0
        1:   21-block  1
    %%%%%:   21-block  2
    %%%%%:   21-block  3
    %%%%%:   21-block  4
    %%%%%:   21-block  5
        1:   21-block  6
        1:   21-block  7
    $$$$$:   21-block  8
    $$$$$:   21-block  9
    $$$$$:   21-block 10
    $$$$$:   21-block 11
    $$$$$:   21-block 12
    $$$$$:   21-block 13
    $$$$$:   21-block 14
    $$$$$:   21-block 15
        1:   22:}
        1:   22-block  0
        1:   22-block  1
    $$$$$:   22-block  2
------------------
        -:   23:
        -:   24:
        4:   25:TEST(GraphicCommandTest, TestLeftLineDirection) {
        1:   26:  auto l = LeftLineCommand({1, 2});
        1:   27:  auto d = l.getMovePoint();
       1*:   28:  ASSERT_EQ(d.getX(), 1);
       1*:   29:  ASSERT_EQ(d.getY(), 2);
        1:   30:}
------------------
_ZN45GraphicCommandTest_TestLeftLineDirection_TestC2Ev:
        1:   25:TEST(GraphicCommandTest, TestLeftLineDirection) {
        1:   25-block  0
------------------
_ZN45GraphicCommandTest_TestLeftLineDirection_TestD0Ev:
        1:   25:TEST(GraphicCommandTest, TestLeftLineDirection) {
        1:   25-block  0
------------------
_ZN45GraphicCommandTest_TestLeftLineDirection_TestD2Ev:
        1:   25:TEST(GraphicCommandTest, TestLeftLineDirection) {
        1:   25-block  0
------------------
_ZN45GraphicCommandTest_TestLeftLineDirection_Test8TestBodyEv:
        1:   25:TEST(GraphicCommandTest, TestLeftLineDirection) {
        1:   26:  auto l = LeftLineCommand({1, 2});
        1:   26-block  0
        1:   27:  auto d = l.getMovePoint();
       1*:   28:  ASSERT_EQ(d.getX(), 1);
        1:   28-block  0
    %%%%%:   28-block  1
    %%%%%:   28-block  2
    %%%%%:   28-block  3
    %%%%%:   28-block  4
        1:   28-block  5
        1:   28-block  6
    $$$$$:   28-block  7
    $$$$$:   28-block  8
    $$$$$:   28-block  9
    $$$$$:   28-block 10
    $$$$$:   28-block 11
    $$$$$:   28-block 12
    $$$$$:   28-block 13
       1*:   29:  ASSERT_EQ(d.getY(), 2);
        1:   29-block  0
        1:   29-block  1
    %%%%%:   29-block  2
    %%%%%:   29-block  3
    %%%%%:   29-block  4
    %%%%%:   29-block  5
        1:   29-block  6
        1:   29-block  7
    $$$$$:   29-block  8
    $$$$$:   29-block  9
    $$$$$:   29-block 10
    $$$$$:   29-block 11
    $$$$$:   29-block 12
    $$$$$:   29-block 13
    $$$$$:   29-block 14
        1:   30:}
        1:   30-block  0
        1:   30-block  1
    $$$$$:   30-block  2
------------------
        -:   31:
        4:   32:TEST(GraphicCommandTest, TestCreateRightLine) {
        1:   33:  auto _ = RightLineCommand({1, 2});
        1:   34:}
------------------
_ZN43GraphicCommandTest_TestCreateRightLine_TestC2Ev:
        1:   32:TEST(GraphicCommandTest, TestCreateRightLine) {
        1:   32-block  0
------------------
_ZN43GraphicCommandTest_TestCreateRightLine_TestD0Ev:
        1:   32:TEST(GraphicCommandTest, TestCreateRightLine) {
        1:   32-block  0
------------------
_ZN43GraphicCommandTest_TestCreateRightLine_TestD2Ev:
        1:   32:TEST(GraphicCommandTest, TestCreateRightLine) {
        1:   32-block  0
------------------
_ZN43GraphicCommandTest_TestCreateRightLine_Test8TestBodyEv:
        1:   32:TEST(GraphicCommandTest, TestCreateRightLine) {
        1:   33:  auto _ = RightLineCommand({1, 2});
        1:   33-block  0
        1:   34:}
------------------
        -:   35:
        4:   36:TEST(GraphicCommandTest, TestRightLinePointGetter) {
        1:   37:  auto r = RightLineCommand({1, 2});
        1:   38:  auto p = r.getMovePoint();
       1*:   39:  ASSERT_EQ(p.getX(), 1);
       1*:   40:  ASSERT_EQ(p.getY(), 2);
        1:   41:}
------------------
_ZN48GraphicCommandTest_TestRightLinePointGetter_TestC2Ev:
        1:   36:TEST(GraphicCommandTest, TestRightLinePointGetter) {
        1:   36-block  0
------------------
_ZN48GraphicCommandTest_TestRightLinePointGetter_TestD0Ev:
        1:   36:TEST(GraphicCommandTest, TestRightLinePointGetter) {
        1:   36-block  0
------------------
_ZN48GraphicCommandTest_TestRightLinePointGetter_TestD2Ev:
        1:   36:TEST(GraphicCommandTest, TestRightLinePointGetter) {
        1:   36-block  0
------------------
_ZN48GraphicCommandTest_TestRightLinePointGetter_Test8TestBodyEv:
        1:   36:TEST(GraphicCommandTest, TestRightLinePointGetter) {
        1:   37:  auto r = RightLineCommand({1, 2});
        1:   37-block  0
        1:   38:  auto p = r.getMovePoint();
       1*:   39:  ASSERT_EQ(p.getX(), 1);
        1:   39-block  0
    %%%%%:   39-block  1
    %%%%%:   39-block  2
    %%%%%:   39-block  3
    %%%%%:   39-block  4
        1:   39-block  5
        1:   39-block  6
    $$$$$:   39-block  7
    $$$$$:   39-block  8
    $$$$$:   39-block  9
    $$$$$:   39-block 10
    $$$$$:   39-block 11
    $$$$$:   39-block 12
    $$$$$:   39-block 13
       1*:   40:  ASSERT_EQ(p.getY(), 2);
        1:   40-block  0
        1:   40-block  1
    %%%%%:   40-block  2
    %%%%%:   40-block  3
    %%%%%:   40-block  4
    %%%%%:   40-block  5
        1:   40-block  6
        1:   40-block  7
    $$$$$:   40-block  8
    $$$$$:   40-block  9
    $$$$$:   40-block 10
    $$$$$:   40-block 11
    $$$$$:   40-block 12
    $$$$$:   40-block 13
    $$$$$:   40-block 14
        1:   41:}
        1:   41-block  0
        1:   41-block  1
    $$$$$:   41-block  2
------------------
        -:   42:
        4:   43:TEST(GraphicCommandTest, TestRightLineStringForm) {
        1:   44:  auto r = RightLineCommand({1, 2});
       2*:   45:  ASSERT_EQ(r.toString(), std::string("1 2 l"));
        1:   46:}
------------------
_ZN47GraphicCommandTest_TestRightLineStringForm_TestC2Ev:
        1:   43:TEST(GraphicCommandTest, TestRightLineStringForm) {
        1:   43-block  0
------------------
_ZN47GraphicCommandTest_TestRightLineStringForm_TestD0Ev:
        1:   43:TEST(GraphicCommandTest, TestRightLineStringForm) {
        1:   43-block  0
------------------
_ZN47GraphicCommandTest_TestRightLineStringForm_TestD2Ev:
        1:   43:TEST(GraphicCommandTest, TestRightLineStringForm) {
        1:   43-block  0
------------------
_ZN47GraphicCommandTest_TestRightLineStringForm_Test8TestBodyEv:
        1:   43:TEST(GraphicCommandTest, TestRightLineStringForm) {
        1:   44:  auto r = RightLineCommand({1, 2});
        1:   44-block  0
       2*:   45:  ASSERT_EQ(r.toString(), std::string("1 2 l"));
        1:   45-block  0
        1:   45-block  1
    %%%%%:   45-block  2
    %%%%%:   45-block  3
    %%%%%:   45-block  4
    %%%%%:   45-block  5
        1:   45-block  6
        1:   45-block  7
    $$$$$:   45-block  8
    $$$$$:   45-block  9
    $$$$$:   45-block 10
    $$$$$:   45-block 11
    $$$$$:   45-block 12
    $$$$$:   45-block 13
    $$$$$:   45-block 14
    $$$$$:   45-block 15
        1:   46:}
        1:   46-block  0
        1:   46-block  1
    $$$$$:   46-block  2
------------------
        -:   47:
        -:   48:
        -:   49:
        4:   50:TEST(GraphicCommandTest, TestRightLineDirection) {
        1:   51:  auto r = RightLineCommand({1, 2});
        1:   52:  auto d = r.getMovePoint();
       1*:   53:  ASSERT_EQ(d.getX(), 1);
       1*:   54:  ASSERT_EQ(d.getY(), 2);
        1:   55:}
------------------
_ZN46GraphicCommandTest_TestRightLineDirection_TestC2Ev:
        1:   50:TEST(GraphicCommandTest, TestRightLineDirection) {
        1:   50-block  0
------------------
_ZN46GraphicCommandTest_TestRightLineDirection_TestD0Ev:
        1:   50:TEST(GraphicCommandTest, TestRightLineDirection) {
        1:   50-block  0
------------------
_ZN46GraphicCommandTest_TestRightLineDirection_TestD2Ev:
        1:   50:TEST(GraphicCommandTest, TestRightLineDirection) {
        1:   50-block  0
------------------
_ZN46GraphicCommandTest_TestRightLineDirection_Test8TestBodyEv:
        1:   50:TEST(GraphicCommandTest, TestRightLineDirection) {
        1:   51:  auto r = RightLineCommand({1, 2});
        1:   51-block  0
        1:   52:  auto d = r.getMovePoint();
       1*:   53:  ASSERT_EQ(d.getX(), 1);
        1:   53-block  0
    %%%%%:   53-block  1
    %%%%%:   53-block  2
    %%%%%:   53-block  3
    %%%%%:   53-block  4
        1:   53-block  5
        1:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
    $$$$$:   53-block 10
    $$$$$:   53-block 11
    $$$$$:   53-block 12
    $$$$$:   53-block 13
       1*:   54:  ASSERT_EQ(d.getY(), 2);
        1:   54-block  0
        1:   54-block  1
    %%%%%:   54-block  2
    %%%%%:   54-block  3
    %%%%%:   54-block  4
    %%%%%:   54-block  5
        1:   54-block  6
        1:   54-block  7
    $$$$$:   54-block  8
    $$$$$:   54-block  9
    $$$$$:   54-block 10
    $$$$$:   54-block 11
    $$$$$:   54-block 12
    $$$$$:   54-block 13
    $$$$$:   54-block 14
        1:   55:}
        1:   55-block  0
        1:   55-block  1
    $$$$$:   55-block  2
------------------
        -:   56:
        4:   57:TEST(GraphicCommandTest, TestCreatePointCommand) {
        1:   58:  auto _ = PointCommand({1, 2});
        1:   59:}
------------------
_ZN46GraphicCommandTest_TestCreatePointCommand_TestC2Ev:
        1:   57:TEST(GraphicCommandTest, TestCreatePointCommand) {
        1:   57-block  0
------------------
_ZN46GraphicCommandTest_TestCreatePointCommand_TestD0Ev:
        1:   57:TEST(GraphicCommandTest, TestCreatePointCommand) {
        1:   57-block  0
------------------
_ZN46GraphicCommandTest_TestCreatePointCommand_TestD2Ev:
        1:   57:TEST(GraphicCommandTest, TestCreatePointCommand) {
        1:   57-block  0
------------------
_ZN46GraphicCommandTest_TestCreatePointCommand_Test8TestBodyEv:
        1:   57:TEST(GraphicCommandTest, TestCreatePointCommand) {
        1:   58:  auto _ = PointCommand({1, 2});
        1:   58-block  0
        1:   59:}
------------------
        -:   60:
        4:   61:TEST(GraphicCommandTest, TestPointCommandPointGetter) {
        1:   62:  auto pc = PointCommand({1, 2});
        1:   63:  auto p = pc.getMovePoint();
       1*:   64:  ASSERT_EQ(p.getX(), 1);
       1*:   65:  ASSERT_EQ(p.getY(), 2);
        1:   66:}
------------------
_ZN51GraphicCommandTest_TestPointCommandPointGetter_TestC2Ev:
        1:   61:TEST(GraphicCommandTest, TestPointCommandPointGetter) {
        1:   61-block  0
------------------
_ZN51GraphicCommandTest_TestPointCommandPointGetter_TestD0Ev:
        1:   61:TEST(GraphicCommandTest, TestPointCommandPointGetter) {
        1:   61-block  0
------------------
_ZN51GraphicCommandTest_TestPointCommandPointGetter_TestD2Ev:
        1:   61:TEST(GraphicCommandTest, TestPointCommandPointGetter) {
        1:   61-block  0
------------------
_ZN51GraphicCommandTest_TestPointCommandPointGetter_Test8TestBodyEv:
        1:   61:TEST(GraphicCommandTest, TestPointCommandPointGetter) {
        1:   62:  auto pc = PointCommand({1, 2});
        1:   62-block  0
        1:   63:  auto p = pc.getMovePoint();
       1*:   64:  ASSERT_EQ(p.getX(), 1);
        1:   64-block  0
    %%%%%:   64-block  1
    %%%%%:   64-block  2
    %%%%%:   64-block  3
    %%%%%:   64-block  4
        1:   64-block  5
        1:   64-block  6
    $$$$$:   64-block  7
    $$$$$:   64-block  8
    $$$$$:   64-block  9
    $$$$$:   64-block 10
    $$$$$:   64-block 11
    $$$$$:   64-block 12
    $$$$$:   64-block 13
       1*:   65:  ASSERT_EQ(p.getY(), 2);
        1:   65-block  0
        1:   65-block  1
    %%%%%:   65-block  2
    %%%%%:   65-block  3
    %%%%%:   65-block  4
    %%%%%:   65-block  5
        1:   65-block  6
        1:   65-block  7
    $$$$$:   65-block  8
    $$$$$:   65-block  9
    $$$$$:   65-block 10
    $$$$$:   65-block 11
    $$$$$:   65-block 12
    $$$$$:   65-block 13
    $$$$$:   65-block 14
        1:   66:}
        1:   66-block  0
        1:   66-block  1
    $$$$$:   66-block  2
------------------
        -:   67:
        4:   68:TEST(GraphicCommandTest, TestPointCommandStringForm) {
        1:   69:  auto pc = PointCommand({1, 2});
       2*:   70:  ASSERT_EQ(pc.toString(), "1 2 1 1 r p2");
        1:   71:}
------------------
_ZN50GraphicCommandTest_TestPointCommandStringForm_TestC2Ev:
        1:   68:TEST(GraphicCommandTest, TestPointCommandStringForm) {
        1:   68-block  0
------------------
_ZN50GraphicCommandTest_TestPointCommandStringForm_TestD0Ev:
        1:   68:TEST(GraphicCommandTest, TestPointCommandStringForm) {
        1:   68-block  0
------------------
_ZN50GraphicCommandTest_TestPointCommandStringForm_TestD2Ev:
        1:   68:TEST(GraphicCommandTest, TestPointCommandStringForm) {
        1:   68-block  0
------------------
_ZN50GraphicCommandTest_TestPointCommandStringForm_Test8TestBodyEv:
        1:   68:TEST(GraphicCommandTest, TestPointCommandStringForm) {
        1:   69:  auto pc = PointCommand({1, 2});
        1:   69-block  0
       2*:   70:  ASSERT_EQ(pc.toString(), "1 2 1 1 r p2");
        1:   70-block  0
    %%%%%:   70-block  1
    %%%%%:   70-block  2
    %%%%%:   70-block  3
    %%%%%:   70-block  4
        1:   70-block  5
        1:   70-block  6
    $$$$$:   70-block  7
    $$$$$:   70-block  8
    $$$$$:   70-block  9
    $$$$$:   70-block 10
    $$$$$:   70-block 11
    $$$$$:   70-block 12
        1:   71:}
        1:   71-block  0
        1:   71-block  1
    $$$$$:   71-block  2
------------------
        -:   72:
        4:   73:TEST(GraphicCommandTest, TestCreateMoveCommand) {
        1:   74:    auto _ = MoveCommand({1,2});
        1:   75:}
------------------
_ZN45GraphicCommandTest_TestCreateMoveCommand_TestC2Ev:
        1:   73:TEST(GraphicCommandTest, TestCreateMoveCommand) {
        1:   73-block  0
------------------
_ZN45GraphicCommandTest_TestCreateMoveCommand_TestD0Ev:
        1:   73:TEST(GraphicCommandTest, TestCreateMoveCommand) {
        1:   73-block  0
------------------
_ZN45GraphicCommandTest_TestCreateMoveCommand_TestD2Ev:
        1:   73:TEST(GraphicCommandTest, TestCreateMoveCommand) {
        1:   73-block  0
------------------
_ZN45GraphicCommandTest_TestCreateMoveCommand_Test8TestBodyEv:
        1:   73:TEST(GraphicCommandTest, TestCreateMoveCommand) {
        1:   74:    auto _ = MoveCommand({1,2});
        1:   74-block  0
        1:   75:}
------------------
        -:   76:
        -:   77:
        4:   78:TEST(GraphicCommandTest, TestMoveCommandPointGetter) {
        1:   79:    auto m = MoveCommand({1, 2});
        1:   80:    auto p = m.getMovePoint();
       1*:   81:    ASSERT_EQ(p.getX(), 1);
       1*:   82:    ASSERT_EQ(p.getY(), 2);
        1:   83:}
------------------
_ZN50GraphicCommandTest_TestMoveCommandPointGetter_TestC2Ev:
        1:   78:TEST(GraphicCommandTest, TestMoveCommandPointGetter) {
        1:   78-block  0
------------------
_ZN50GraphicCommandTest_TestMoveCommandPointGetter_TestD0Ev:
        1:   78:TEST(GraphicCommandTest, TestMoveCommandPointGetter) {
        1:   78-block  0
------------------
_ZN50GraphicCommandTest_TestMoveCommandPointGetter_TestD2Ev:
        1:   78:TEST(GraphicCommandTest, TestMoveCommandPointGetter) {
        1:   78-block  0
------------------
_ZN50GraphicCommandTest_TestMoveCommandPointGetter_Test8TestBodyEv:
        1:   78:TEST(GraphicCommandTest, TestMoveCommandPointGetter) {
        1:   79:    auto m = MoveCommand({1, 2});
        1:   79-block  0
        1:   80:    auto p = m.getMovePoint();
       1*:   81:    ASSERT_EQ(p.getX(), 1);
        1:   81-block  0
    %%%%%:   81-block  1
    %%%%%:   81-block  2
    %%%%%:   81-block  3
    %%%%%:   81-block  4
        1:   81-block  5
        1:   81-block  6
    $$$$$:   81-block  7
    $$$$$:   81-block  8
    $$$$$:   81-block  9
    $$$$$:   81-block 10
    $$$$$:   81-block 11
    $$$$$:   81-block 12
    $$$$$:   81-block 13
       1*:   82:    ASSERT_EQ(p.getY(), 2);
        1:   82-block  0
        1:   82-block  1
    %%%%%:   82-block  2
    %%%%%:   82-block  3
    %%%%%:   82-block  4
    %%%%%:   82-block  5
        1:   82-block  6
        1:   82-block  7
    $$$$$:   82-block  8
    $$$$$:   82-block  9
    $$$$$:   82-block 10
    $$$$$:   82-block 11
    $$$$$:   82-block 12
    $$$$$:   82-block 13
    $$$$$:   82-block 14
        1:   83:}
        1:   83-block  0
        1:   83-block  1
    $$$$$:   83-block  2
------------------
        -:   84:
        4:   85:TEST(GraphicCommandTest, TestMoveCommandStringForm) {
        -:   86:   ///@todo
        1:   87:}
------------------
_ZN49GraphicCommandTest_TestMoveCommandStringForm_TestC2Ev:
        1:   85:TEST(GraphicCommandTest, TestMoveCommandStringForm) {
        1:   85-block  0
------------------
_ZN49GraphicCommandTest_TestMoveCommandStringForm_TestD0Ev:
        1:   85:TEST(GraphicCommandTest, TestMoveCommandStringForm) {
        1:   85-block  0
------------------
_ZN49GraphicCommandTest_TestMoveCommandStringForm_TestD2Ev:
        1:   85:TEST(GraphicCommandTest, TestMoveCommandStringForm) {
        1:   85-block  0
------------------
_ZN49GraphicCommandTest_TestMoveCommandStringForm_Test8TestBodyEv:
        1:   85:TEST(GraphicCommandTest, TestMoveCommandStringForm) {
        -:   86:   ///@todo
        1:   87:}
------------------
        -:   88:
        -:   89:
        4:   90:TEST(GraphicCommandTest, TestRescaleLeftLine) {
        1:   91:    auto ll = LeftLineCommand({2,2});
        1:   92:    ll.rescale(0.5);
        1:   93:    auto p = ll.getMovePoint();
       1*:   94:    ASSERT_FLOAT_EQ(p.getX(), 1);
       1*:   95:    ASSERT_FLOAT_EQ(p.getY(), 1);
        -:   96:
        1:   97:}
------------------
_ZN43GraphicCommandTest_TestRescaleLeftLine_TestC2Ev:
        1:   90:TEST(GraphicCommandTest, TestRescaleLeftLine) {
        1:   90-block  0
------------------
_ZN43GraphicCommandTest_TestRescaleLeftLine_TestD0Ev:
        1:   90:TEST(GraphicCommandTest, TestRescaleLeftLine) {
        1:   90-block  0
------------------
_ZN43GraphicCommandTest_TestRescaleLeftLine_TestD2Ev:
        1:   90:TEST(GraphicCommandTest, TestRescaleLeftLine) {
        1:   90-block  0
------------------
_ZN43GraphicCommandTest_TestRescaleLeftLine_Test8TestBodyEv:
        1:   90:TEST(GraphicCommandTest, TestRescaleLeftLine) {
        1:   91:    auto ll = LeftLineCommand({2,2});
        1:   91-block  0
        1:   92:    ll.rescale(0.5);
        1:   93:    auto p = ll.getMovePoint();
        1:   93-block  0
       1*:   94:    ASSERT_FLOAT_EQ(p.getX(), 1);
        1:   94-block  0
    %%%%%:   94-block  1
    %%%%%:   94-block  2
    %%%%%:   94-block  3
    %%%%%:   94-block  4
        1:   94-block  5
        1:   94-block  6
    $$$$$:   94-block  7
    $$$$$:   94-block  8
    $$$$$:   94-block  9
    $$$$$:   94-block 10
    $$$$$:   94-block 11
       1*:   95:    ASSERT_FLOAT_EQ(p.getY(), 1);
        1:   95-block  0
        1:   95-block  1
    %%%%%:   95-block  2
    %%%%%:   95-block  3
    %%%%%:   95-block  4
    %%%%%:   95-block  5
        1:   95-block  6
        1:   95-block  7
    $$$$$:   95-block  8
    $$$$$:   95-block  9
    $$$$$:   95-block 10
    $$$$$:   95-block 11
    $$$$$:   95-block 12
        -:   96:
        1:   97:}
        1:   97-block  0
        1:   97-block  1
    $$$$$:   97-block  2
------------------
        -:   98:
        4:   99:TEST(GraphicCommandTest, TestRescaleRightLine) {
        1:  100:    auto rl = RightLineCommand({2,2});
        1:  101:    rl.rescale(2);
        1:  102:    auto p = rl.getMovePoint();
       1*:  103:    ASSERT_FLOAT_EQ(p.getX(), 4);
       1*:  104:    ASSERT_FLOAT_EQ(p.getY(), 4);
        1:  105:}
------------------
_ZN44GraphicCommandTest_TestRescaleRightLine_TestC2Ev:
        1:   99:TEST(GraphicCommandTest, TestRescaleRightLine) {
        1:   99-block  0
------------------
_ZN44GraphicCommandTest_TestRescaleRightLine_TestD0Ev:
        1:   99:TEST(GraphicCommandTest, TestRescaleRightLine) {
        1:   99-block  0
------------------
_ZN44GraphicCommandTest_TestRescaleRightLine_TestD2Ev:
        1:   99:TEST(GraphicCommandTest, TestRescaleRightLine) {
        1:   99-block  0
------------------
_ZN44GraphicCommandTest_TestRescaleRightLine_Test8TestBodyEv:
        1:   99:TEST(GraphicCommandTest, TestRescaleRightLine) {
        1:  100:    auto rl = RightLineCommand({2,2});
        1:  100-block  0
        1:  101:    rl.rescale(2);
        1:  102:    auto p = rl.getMovePoint();
        1:  102-block  0
       1*:  103:    ASSERT_FLOAT_EQ(p.getX(), 4);
        1:  103-block  0
    %%%%%:  103-block  1
    %%%%%:  103-block  2
    %%%%%:  103-block  3
    %%%%%:  103-block  4
        1:  103-block  5
        1:  103-block  6
    $$$$$:  103-block  7
    $$$$$:  103-block  8
    $$$$$:  103-block  9
    $$$$$:  103-block 10
    $$$$$:  103-block 11
       1*:  104:    ASSERT_FLOAT_EQ(p.getY(), 4);
        1:  104-block  0
        1:  104-block  1
    %%%%%:  104-block  2
    %%%%%:  104-block  3
    %%%%%:  104-block  4
    %%%%%:  104-block  5
        1:  104-block  6
        1:  104-block  7
    $$$$$:  104-block  8
    $$$$$:  104-block  9
    $$$$$:  104-block 10
    $$$$$:  104-block 11
    $$$$$:  104-block 12
        1:  105:}
        1:  105-block  0
        1:  105-block  1
    $$$$$:  105-block  2
------------------
        -:  106:
        4:  107:TEST(GraphicCommandTest, TestRescalePointCommand) {
        1:  108:    auto pc = PointCommand({2,2});
        1:  109:    pc.rescale(0);
        1:  110:    auto p = pc.getMovePoint();
       1*:  111:    ASSERT_FLOAT_EQ(p.getX(), 0);
       1*:  112:    ASSERT_FLOAT_EQ(p.getY(), 0);
        1:  113:}
------------------
_ZN47GraphicCommandTest_TestRescalePointCommand_TestC2Ev:
        1:  107:TEST(GraphicCommandTest, TestRescalePointCommand) {
        1:  107-block  0
------------------
_ZN47GraphicCommandTest_TestRescalePointCommand_TestD0Ev:
        1:  107:TEST(GraphicCommandTest, TestRescalePointCommand) {
        1:  107-block  0
------------------
_ZN47GraphicCommandTest_TestRescalePointCommand_TestD2Ev:
        1:  107:TEST(GraphicCommandTest, TestRescalePointCommand) {
        1:  107-block  0
------------------
_ZN47GraphicCommandTest_TestRescalePointCommand_Test8TestBodyEv:
        1:  107:TEST(GraphicCommandTest, TestRescalePointCommand) {
        1:  108:    auto pc = PointCommand({2,2});
        1:  108-block  0
        1:  109:    pc.rescale(0);
        1:  110:    auto p = pc.getMovePoint();
        1:  110-block  0
       1*:  111:    ASSERT_FLOAT_EQ(p.getX(), 0);
        1:  111-block  0
    %%%%%:  111-block  1
    %%%%%:  111-block  2
    %%%%%:  111-block  3
    %%%%%:  111-block  4
        1:  111-block  5
        1:  111-block  6
    $$$$$:  111-block  7
    $$$$$:  111-block  8
    $$$$$:  111-block  9
    $$$$$:  111-block 10
    $$$$$:  111-block 11
       1*:  112:    ASSERT_FLOAT_EQ(p.getY(), 0);
        1:  112-block  0
        1:  112-block  1
    %%%%%:  112-block  2
    %%%%%:  112-block  3
    %%%%%:  112-block  4
    %%%%%:  112-block  5
        1:  112-block  6
        1:  112-block  7
    $$$$$:  112-block  8
    $$$$$:  112-block  9
    $$$$$:  112-block 10
    $$$$$:  112-block 11
    $$$$$:  112-block 12
        1:  113:}
        1:  113-block  0
        1:  113-block  1
    $$$$$:  113-block  2
------------------
        -:  114:
        -:  115:
        -:  116:
        4:  117:TEST(GraphicCommandTest, TestLeftLeftDifference) {
        1:  118:    auto ll1 = LeftLineCommand({1, 1});
        1:  119:    auto ll2 = LeftLineCommand({2, 2});
        1:  120:    auto diff = countDifference(ll1,ll2);
       1*:  121:    ASSERT_FLOAT_EQ(diff, 0);
        1:  122:}
------------------
_ZN46GraphicCommandTest_TestLeftLeftDifference_TestC2Ev:
        1:  117:TEST(GraphicCommandTest, TestLeftLeftDifference) {
        1:  117-block  0
------------------
_ZN46GraphicCommandTest_TestLeftLeftDifference_TestD0Ev:
        1:  117:TEST(GraphicCommandTest, TestLeftLeftDifference) {
        1:  117-block  0
------------------
_ZN46GraphicCommandTest_TestLeftLeftDifference_TestD2Ev:
        1:  117:TEST(GraphicCommandTest, TestLeftLeftDifference) {
        1:  117-block  0
------------------
_ZN46GraphicCommandTest_TestLeftLeftDifference_Test8TestBodyEv:
        1:  117:TEST(GraphicCommandTest, TestLeftLeftDifference) {
        1:  118:    auto ll1 = LeftLineCommand({1, 1});
        1:  118-block  0
        1:  119:    auto ll2 = LeftLineCommand({2, 2});
        1:  120:    auto diff = countDifference(ll1,ll2);
       1*:  121:    ASSERT_FLOAT_EQ(diff, 0);
        1:  121-block  0
        1:  121-block  1
    %%%%%:  121-block  2
    %%%%%:  121-block  3
    %%%%%:  121-block  4
    %%%%%:  121-block  5
        1:  121-block  6
        1:  121-block  7
    $$$$$:  121-block  8
    $$$$$:  121-block  9
    $$$$$:  121-block 10
    $$$$$:  121-block 11
    $$$$$:  121-block 12
        1:  122:}
        1:  122-block  0
        1:  122-block  1
        1:  122-block  2
        1:  122-block  3
    $$$$$:  122-block  4
    $$$$$:  122-block  5
------------------
        -:  123:
        4:  124:TEST(GraphicCommandTest, TestLeftLeftDifferencePerpendicular) {
        1:  125:    auto ll1 = LeftLineCommand({1, 0});
        1:  126:    auto ll2 = LeftLineCommand({0, 2});
        1:  127:    auto diff = countDifference(ll1,ll2);
       1*:  128:    ASSERT_TRUE(abs(diff - length(ll2.getMovePoint())) < 1e-5);
        1:  129:}
------------------
_ZN59GraphicCommandTest_TestLeftLeftDifferencePerpendicular_TestC2Ev:
        1:  124:TEST(GraphicCommandTest, TestLeftLeftDifferencePerpendicular) {
        1:  124-block  0
------------------
_ZN59GraphicCommandTest_TestLeftLeftDifferencePerpendicular_TestD0Ev:
        1:  124:TEST(GraphicCommandTest, TestLeftLeftDifferencePerpendicular) {
        1:  124-block  0
------------------
_ZN59GraphicCommandTest_TestLeftLeftDifferencePerpendicular_TestD2Ev:
        1:  124:TEST(GraphicCommandTest, TestLeftLeftDifferencePerpendicular) {
        1:  124-block  0
------------------
_ZN59GraphicCommandTest_TestLeftLeftDifferencePerpendicular_Test8TestBodyEv:
        1:  124:TEST(GraphicCommandTest, TestLeftLeftDifferencePerpendicular) {
        1:  125:    auto ll1 = LeftLineCommand({1, 0});
        1:  125-block  0
        1:  126:    auto ll2 = LeftLineCommand({0, 2});
        1:  127:    auto diff = countDifference(ll1,ll2);
       1*:  128:    ASSERT_TRUE(abs(diff - length(ll2.getMovePoint())) < 1e-5);
        1:  128-block  0
        1:  128-block  1
    %%%%%:  128-block  2
    %%%%%:  128-block  3
    %%%%%:  128-block  4
    %%%%%:  128-block  5
    %%%%%:  128-block  6
        1:  128-block  7
        1:  128-block  8
    $$$$$:  128-block  9
    $$$$$:  128-block 10
    $$$$$:  128-block 11
    $$$$$:  128-block 12
    $$$$$:  128-block 13
    $$$$$:  128-block 14
    $$$$$:  128-block 15
    $$$$$:  128-block 16
        1:  129:}
        1:  129-block  0
        1:  129-block  1
        1:  129-block  2
        1:  129-block  3
    $$$$$:  129-block  4
    $$$$$:  129-block  5
------------------
        4:  130:TEST(GraphicCommandTest, TestLeftLeftMidpoint) {
        1:  131:    auto ll1 = LeftLineCommand({1,1});
        1:  132:    auto ll2 = LeftLineCommand({1,1});
        1:  133:    auto midpoint = createMidpoint(ll1, ll2);
        1:  134:    auto new_line_pointer = std::get_if<LeftLineCommand>(&midpoint);
        1:  135:    auto mp = new_line_pointer->getMovePoint();
       1*:  136:    ASSERT_FLOAT_EQ(mp.getX(), 2);
       1*:  137:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  138:}
------------------
_ZN44GraphicCommandTest_TestLeftLeftMidpoint_TestC2Ev:
        1:  130:TEST(GraphicCommandTest, TestLeftLeftMidpoint) {
        1:  130-block  0
------------------
_ZN44GraphicCommandTest_TestLeftLeftMidpoint_TestD0Ev:
        1:  130:TEST(GraphicCommandTest, TestLeftLeftMidpoint) {
        1:  130-block  0
------------------
_ZN44GraphicCommandTest_TestLeftLeftMidpoint_TestD2Ev:
        1:  130:TEST(GraphicCommandTest, TestLeftLeftMidpoint) {
        1:  130-block  0
------------------
_ZN44GraphicCommandTest_TestLeftLeftMidpoint_Test8TestBodyEv:
        1:  130:TEST(GraphicCommandTest, TestLeftLeftMidpoint) {
        1:  131:    auto ll1 = LeftLineCommand({1,1});
        1:  131-block  0
        1:  132:    auto ll2 = LeftLineCommand({1,1});
        1:  133:    auto midpoint = createMidpoint(ll1, ll2);
        1:  134:    auto new_line_pointer = std::get_if<LeftLineCommand>(&midpoint);
        1:  134-block  0
        1:  135:    auto mp = new_line_pointer->getMovePoint();
       1*:  136:    ASSERT_FLOAT_EQ(mp.getX(), 2);
        1:  136-block  0
    %%%%%:  136-block  1
    %%%%%:  136-block  2
    %%%%%:  136-block  3
    %%%%%:  136-block  4
        1:  136-block  5
        1:  136-block  6
    $$$$$:  136-block  7
    $$$$$:  136-block  8
    $$$$$:  136-block  9
    $$$$$:  136-block 10
    $$$$$:  136-block 11
       1*:  137:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  137-block  0
        1:  137-block  1
    %%%%%:  137-block  2
    %%%%%:  137-block  3
    %%%%%:  137-block  4
    %%%%%:  137-block  5
        1:  137-block  6
        1:  137-block  7
    $$$$$:  137-block  8
    $$$$$:  137-block  9
    $$$$$:  137-block 10
    $$$$$:  137-block 11
    $$$$$:  137-block 12
        1:  138:}
        1:  138-block  0
        1:  138-block  1
        1:  138-block  2
        1:  138-block  3
        1:  138-block  4
        1:  138-block  5
    $$$$$:  138-block  6
    $$$$$:  138-block  7
    $$$$$:  138-block  8
------------------
        -:  139:
        4:  140:TEST(GraphicCommandTest, TestLeftRighttDifference) {
        1:  141:    auto ll = LeftLineCommand({1, 1});
        1:  142:    auto rl = RightLineCommand({-1, -1});
        1:  143:    auto diff = countDifference(ll, rl);
       1*:  144:    ASSERT_TRUE(abs(diff - MAX_DIFFERENCE) < 1e-5);
        1:  145:}
------------------
_ZN48GraphicCommandTest_TestLeftRighttDifference_TestC2Ev:
        1:  140:TEST(GraphicCommandTest, TestLeftRighttDifference) {
        1:  140-block  0
------------------
_ZN48GraphicCommandTest_TestLeftRighttDifference_TestD0Ev:
        1:  140:TEST(GraphicCommandTest, TestLeftRighttDifference) {
        1:  140-block  0
------------------
_ZN48GraphicCommandTest_TestLeftRighttDifference_TestD2Ev:
        1:  140:TEST(GraphicCommandTest, TestLeftRighttDifference) {
        1:  140-block  0
------------------
_ZN48GraphicCommandTest_TestLeftRighttDifference_Test8TestBodyEv:
        1:  140:TEST(GraphicCommandTest, TestLeftRighttDifference) {
        1:  141:    auto ll = LeftLineCommand({1, 1});
        1:  141-block  0
        1:  142:    auto rl = RightLineCommand({-1, -1});
        1:  143:    auto diff = countDifference(ll, rl);
       1*:  144:    ASSERT_TRUE(abs(diff - MAX_DIFFERENCE) < 1e-5);
        1:  144-block  0
    %%%%%:  144-block  1
    %%%%%:  144-block  2
    %%%%%:  144-block  3
    %%%%%:  144-block  4
    %%%%%:  144-block  5
        1:  144-block  6
        1:  144-block  7
    $$$$$:  144-block  8
    $$$$$:  144-block  9
    $$$$$:  144-block 10
    $$$$$:  144-block 11
    $$$$$:  144-block 12
    $$$$$:  144-block 13
    $$$$$:  144-block 14
        1:  145:}
        1:  145-block  0
        1:  145-block  1
        1:  145-block  2
        1:  145-block  3
    $$$$$:  145-block  4
    $$$$$:  145-block  5
------------------
        -:  146:
        4:  147:TEST(GraphicCommandTest, TestLeftRightMidpoint) {
        1:  148:    auto ll = LeftLineCommand({1,1});
        1:  149:    auto rl = RightLineCommand({-1,-1});
        1:  150:    auto var = createMidpoint(ll,rl);
        1:  151:    auto new_line_pointer = std::get_if<LeftLineCommand>(&var);
       1*:  152:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  153:    auto mp = new_line_pointer->getMovePoint();
       1*:  154:    ASSERT_FLOAT_EQ(mp.getX(), 1);
       1*:  155:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  156:}
------------------
_ZN45GraphicCommandTest_TestLeftRightMidpoint_TestC2Ev:
        1:  147:TEST(GraphicCommandTest, TestLeftRightMidpoint) {
        1:  147-block  0
------------------
_ZN45GraphicCommandTest_TestLeftRightMidpoint_TestD0Ev:
        1:  147:TEST(GraphicCommandTest, TestLeftRightMidpoint) {
        1:  147-block  0
------------------
_ZN45GraphicCommandTest_TestLeftRightMidpoint_TestD2Ev:
        1:  147:TEST(GraphicCommandTest, TestLeftRightMidpoint) {
        1:  147-block  0
------------------
_ZN45GraphicCommandTest_TestLeftRightMidpoint_Test8TestBodyEv:
        1:  147:TEST(GraphicCommandTest, TestLeftRightMidpoint) {
        1:  148:    auto ll = LeftLineCommand({1,1});
        1:  148-block  0
        1:  149:    auto rl = RightLineCommand({-1,-1});
        1:  150:    auto var = createMidpoint(ll,rl);
        1:  151:    auto new_line_pointer = std::get_if<LeftLineCommand>(&var);
        1:  151-block  0
       1*:  152:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  152-block  0
    %%%%%:  152-block  1
    %%%%%:  152-block  2
    %%%%%:  152-block  3
    %%%%%:  152-block  4
        1:  152-block  5
        1:  152-block  6
    $$$$$:  152-block  7
    $$$$$:  152-block  8
    $$$$$:  152-block  9
    $$$$$:  152-block 10
    $$$$$:  152-block 11
    $$$$$:  152-block 12
    $$$$$:  152-block 13
        1:  153:    auto mp = new_line_pointer->getMovePoint();
        1:  153-block  0
       1*:  154:    ASSERT_FLOAT_EQ(mp.getX(), 1);
        1:  154-block  0
    %%%%%:  154-block  1
    %%%%%:  154-block  2
    %%%%%:  154-block  3
    %%%%%:  154-block  4
        1:  154-block  5
        1:  154-block  6
    $$$$$:  154-block  7
    $$$$$:  154-block  8
    $$$$$:  154-block  9
    $$$$$:  154-block 10
    $$$$$:  154-block 11
       1*:  155:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  155-block  0
        1:  155-block  1
    %%%%%:  155-block  2
    %%%%%:  155-block  3
    %%%%%:  155-block  4
    %%%%%:  155-block  5
        1:  155-block  6
        1:  155-block  7
    $$$$$:  155-block  8
    $$$$$:  155-block  9
    $$$$$:  155-block 10
    $$$$$:  155-block 11
    $$$$$:  155-block 12
        1:  156:}
        1:  156-block  0
        1:  156-block  1
        1:  156-block  2
        1:  156-block  3
        1:  156-block  4
        1:  156-block  5
    $$$$$:  156-block  6
    $$$$$:  156-block  7
    $$$$$:  156-block  8
------------------
        -:  157:
        4:  158:TEST(GraphicCommandTest, TestRightLeftDifference) {
        1:  159:    auto rl = RightLineCommand({1,1});
        1:  160:    auto ll = LeftLineCommand({1,1});
        1:  161:    auto diff = countDifference(rl, ll);
       1*:  162:    ASSERT_TRUE(abs(diff - MAX_DIFFERENCE) < 1e-5);
        1:  163:}
------------------
_ZN47GraphicCommandTest_TestRightLeftDifference_TestC2Ev:
        1:  158:TEST(GraphicCommandTest, TestRightLeftDifference) {
        1:  158-block  0
------------------
_ZN47GraphicCommandTest_TestRightLeftDifference_TestD0Ev:
        1:  158:TEST(GraphicCommandTest, TestRightLeftDifference) {
        1:  158-block  0
------------------
_ZN47GraphicCommandTest_TestRightLeftDifference_TestD2Ev:
        1:  158:TEST(GraphicCommandTest, TestRightLeftDifference) {
        1:  158-block  0
------------------
_ZN47GraphicCommandTest_TestRightLeftDifference_Test8TestBodyEv:
        1:  158:TEST(GraphicCommandTest, TestRightLeftDifference) {
        1:  159:    auto rl = RightLineCommand({1,1});
        1:  159-block  0
        1:  160:    auto ll = LeftLineCommand({1,1});
        1:  161:    auto diff = countDifference(rl, ll);
       1*:  162:    ASSERT_TRUE(abs(diff - MAX_DIFFERENCE) < 1e-5);
        1:  162-block  0
    %%%%%:  162-block  1
    %%%%%:  162-block  2
    %%%%%:  162-block  3
    %%%%%:  162-block  4
    %%%%%:  162-block  5
        1:  162-block  6
        1:  162-block  7
    $$$$$:  162-block  8
    $$$$$:  162-block  9
    $$$$$:  162-block 10
    $$$$$:  162-block 11
    $$$$$:  162-block 12
    $$$$$:  162-block 13
    $$$$$:  162-block 14
        1:  163:}
        1:  163-block  0
        1:  163-block  1
        1:  163-block  2
        1:  163-block  3
    $$$$$:  163-block  4
    $$$$$:  163-block  5
------------------
        -:  164:
        4:  165:TEST(GraphicCommandTest, TestRighLefttMidpoint) {
        1:  166:    auto rl = RightLineCommand({1, 1});
        1:  167:    auto ll = LeftLineCommand({1, 1});
        1:  168:    auto var = createMidpoint(rl,ll);
        1:  169:    auto new_line_pointer = std::get_if<RightLineCommand>(&var);
       1*:  170:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  171:    auto mp = new_line_pointer->getMovePoint();
       1*:  172:    ASSERT_FLOAT_EQ(mp.getX(), 1);
       1*:  173:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  174:}
------------------
_ZN45GraphicCommandTest_TestRighLefttMidpoint_TestC2Ev:
        1:  165:TEST(GraphicCommandTest, TestRighLefttMidpoint) {
        1:  165-block  0
------------------
_ZN45GraphicCommandTest_TestRighLefttMidpoint_TestD0Ev:
        1:  165:TEST(GraphicCommandTest, TestRighLefttMidpoint) {
        1:  165-block  0
------------------
_ZN45GraphicCommandTest_TestRighLefttMidpoint_TestD2Ev:
        1:  165:TEST(GraphicCommandTest, TestRighLefttMidpoint) {
        1:  165-block  0
------------------
_ZN45GraphicCommandTest_TestRighLefttMidpoint_Test8TestBodyEv:
        1:  165:TEST(GraphicCommandTest, TestRighLefttMidpoint) {
        1:  166:    auto rl = RightLineCommand({1, 1});
        1:  166-block  0
        1:  167:    auto ll = LeftLineCommand({1, 1});
        1:  168:    auto var = createMidpoint(rl,ll);
        1:  169:    auto new_line_pointer = std::get_if<RightLineCommand>(&var);
        1:  169-block  0
       1*:  170:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  170-block  0
    %%%%%:  170-block  1
    %%%%%:  170-block  2
    %%%%%:  170-block  3
    %%%%%:  170-block  4
        1:  170-block  5
        1:  170-block  6
    $$$$$:  170-block  7
    $$$$$:  170-block  8
    $$$$$:  170-block  9
    $$$$$:  170-block 10
    $$$$$:  170-block 11
    $$$$$:  170-block 12
    $$$$$:  170-block 13
        1:  171:    auto mp = new_line_pointer->getMovePoint();
        1:  171-block  0
       1*:  172:    ASSERT_FLOAT_EQ(mp.getX(), 1);
        1:  172-block  0
    %%%%%:  172-block  1
    %%%%%:  172-block  2
    %%%%%:  172-block  3
    %%%%%:  172-block  4
        1:  172-block  5
        1:  172-block  6
    $$$$$:  172-block  7
    $$$$$:  172-block  8
    $$$$$:  172-block  9
    $$$$$:  172-block 10
    $$$$$:  172-block 11
       1*:  173:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  173-block  0
        1:  173-block  1
    %%%%%:  173-block  2
    %%%%%:  173-block  3
    %%%%%:  173-block  4
    %%%%%:  173-block  5
        1:  173-block  6
        1:  173-block  7
    $$$$$:  173-block  8
    $$$$$:  173-block  9
    $$$$$:  173-block 10
    $$$$$:  173-block 11
    $$$$$:  173-block 12
        1:  174:}
        1:  174-block  0
        1:  174-block  1
        1:  174-block  2
        1:  174-block  3
        1:  174-block  4
        1:  174-block  5
    $$$$$:  174-block  6
    $$$$$:  174-block  7
    $$$$$:  174-block  8
------------------
        -:  175:
        4:  176:TEST(GraphicCommandTest, TestRightRightDifference) {
        1:  177:    auto rl1 = RightLineCommand({1, 1});
        1:  178:    auto rl2 = RightLineCommand({2, 2});
        1:  179:    auto diff = countDifference(rl1, rl2);
       1*:  180:    ASSERT_FLOAT_EQ(diff, 0);
        1:  181:}
------------------
_ZN48GraphicCommandTest_TestRightRightDifference_TestC2Ev:
        1:  176:TEST(GraphicCommandTest, TestRightRightDifference) {
        1:  176-block  0
------------------
_ZN48GraphicCommandTest_TestRightRightDifference_TestD0Ev:
        1:  176:TEST(GraphicCommandTest, TestRightRightDifference) {
        1:  176-block  0
------------------
_ZN48GraphicCommandTest_TestRightRightDifference_TestD2Ev:
        1:  176:TEST(GraphicCommandTest, TestRightRightDifference) {
        1:  176-block  0
------------------
_ZN48GraphicCommandTest_TestRightRightDifference_Test8TestBodyEv:
        1:  176:TEST(GraphicCommandTest, TestRightRightDifference) {
        1:  177:    auto rl1 = RightLineCommand({1, 1});
        1:  177-block  0
        1:  178:    auto rl2 = RightLineCommand({2, 2});
        1:  179:    auto diff = countDifference(rl1, rl2);
       1*:  180:    ASSERT_FLOAT_EQ(diff, 0);
        1:  180-block  0
        1:  180-block  1
    %%%%%:  180-block  2
    %%%%%:  180-block  3
    %%%%%:  180-block  4
    %%%%%:  180-block  5
        1:  180-block  6
        1:  180-block  7
    $$$$$:  180-block  8
    $$$$$:  180-block  9
    $$$$$:  180-block 10
    $$$$$:  180-block 11
    $$$$$:  180-block 12
        1:  181:}
        1:  181-block  0
        1:  181-block  1
        1:  181-block  2
        1:  181-block  3
    $$$$$:  181-block  4
    $$$$$:  181-block  5
------------------
        -:  182:
        4:  183:TEST(GraphicCommandTest, TestRightRightMidpoint) {
        1:  184:    auto rl1 = RightLineCommand({1,1});
        1:  185:    auto rl2 = RightLineCommand({1,1});
        1:  186:    auto var = createMidpoint(rl1, rl2);
        1:  187:    auto new_line_pointer = std::get_if<RightLineCommand>(&var);
       1*:  188:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  189:    auto mp = new_line_pointer->getMovePoint();
       1*:  190:    ASSERT_FLOAT_EQ(mp.getX(), 2);
       1*:  191:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  192:}
------------------
_ZN46GraphicCommandTest_TestRightRightMidpoint_TestC2Ev:
        1:  183:TEST(GraphicCommandTest, TestRightRightMidpoint) {
        1:  183-block  0
------------------
_ZN46GraphicCommandTest_TestRightRightMidpoint_TestD0Ev:
        1:  183:TEST(GraphicCommandTest, TestRightRightMidpoint) {
        1:  183-block  0
------------------
_ZN46GraphicCommandTest_TestRightRightMidpoint_TestD2Ev:
        1:  183:TEST(GraphicCommandTest, TestRightRightMidpoint) {
        1:  183-block  0
------------------
_ZN46GraphicCommandTest_TestRightRightMidpoint_Test8TestBodyEv:
        1:  183:TEST(GraphicCommandTest, TestRightRightMidpoint) {
        1:  184:    auto rl1 = RightLineCommand({1,1});
        1:  184-block  0
        1:  185:    auto rl2 = RightLineCommand({1,1});
        1:  186:    auto var = createMidpoint(rl1, rl2);
        1:  187:    auto new_line_pointer = std::get_if<RightLineCommand>(&var);
        1:  187-block  0
       1*:  188:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  188-block  0
    %%%%%:  188-block  1
    %%%%%:  188-block  2
    %%%%%:  188-block  3
    %%%%%:  188-block  4
        1:  188-block  5
        1:  188-block  6
    $$$$$:  188-block  7
    $$$$$:  188-block  8
    $$$$$:  188-block  9
    $$$$$:  188-block 10
    $$$$$:  188-block 11
    $$$$$:  188-block 12
    $$$$$:  188-block 13
        1:  189:    auto mp = new_line_pointer->getMovePoint();
        1:  189-block  0
       1*:  190:    ASSERT_FLOAT_EQ(mp.getX(), 2);
        1:  190-block  0
    %%%%%:  190-block  1
    %%%%%:  190-block  2
    %%%%%:  190-block  3
    %%%%%:  190-block  4
        1:  190-block  5
        1:  190-block  6
    $$$$$:  190-block  7
    $$$$$:  190-block  8
    $$$$$:  190-block  9
    $$$$$:  190-block 10
    $$$$$:  190-block 11
       1*:  191:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  191-block  0
        1:  191-block  1
    %%%%%:  191-block  2
    %%%%%:  191-block  3
    %%%%%:  191-block  4
    %%%%%:  191-block  5
        1:  191-block  6
        1:  191-block  7
    $$$$$:  191-block  8
    $$$$$:  191-block  9
    $$$$$:  191-block 10
    $$$$$:  191-block 11
    $$$$$:  191-block 12
        1:  192:}
        1:  192-block  0
        1:  192-block  1
        1:  192-block  2
        1:  192-block  3
        1:  192-block  4
        1:  192-block  5
    $$$$$:  192-block  6
    $$$$$:  192-block  7
    $$$$$:  192-block  8
------------------
        -:  193:
        4:  194:TEST(GraphicCommandTest, TestPointPointDifference) {
        1:  195:    auto p1 = PointCommand({1,1});
        1:  196:    auto p2 = PointCommand({2,2});
        1:  197:    auto diff = countDifference(p1,p2);
       1*:  198:    ASSERT_FLOAT_EQ(diff, std::sqrt(2));
        1:  199:}
------------------
_ZN48GraphicCommandTest_TestPointPointDifference_TestC2Ev:
        1:  194:TEST(GraphicCommandTest, TestPointPointDifference) {
        1:  194-block  0
------------------
_ZN48GraphicCommandTest_TestPointPointDifference_TestD0Ev:
        1:  194:TEST(GraphicCommandTest, TestPointPointDifference) {
        1:  194-block  0
------------------
_ZN48GraphicCommandTest_TestPointPointDifference_TestD2Ev:
        1:  194:TEST(GraphicCommandTest, TestPointPointDifference) {
        1:  194-block  0
------------------
_ZN48GraphicCommandTest_TestPointPointDifference_Test8TestBodyEv:
        1:  194:TEST(GraphicCommandTest, TestPointPointDifference) {
        1:  195:    auto p1 = PointCommand({1,1});
        1:  195-block  0
        1:  196:    auto p2 = PointCommand({2,2});
        1:  197:    auto diff = countDifference(p1,p2);
       1*:  198:    ASSERT_FLOAT_EQ(diff, std::sqrt(2));
        1:  198-block  0
        1:  198-block  1
    %%%%%:  198-block  2
    %%%%%:  198-block  3
    %%%%%:  198-block  4
    %%%%%:  198-block  5
        1:  198-block  6
        1:  198-block  7
    $$$$$:  198-block  8
    $$$$$:  198-block  9
    $$$$$:  198-block 10
    $$$$$:  198-block 11
    $$$$$:  198-block 12
        1:  199:}
        1:  199-block  0
        1:  199-block  1
        1:  199-block  2
        1:  199-block  3
    $$$$$:  199-block  4
    $$$$$:  199-block  5
------------------
        -:  200:
        4:  201:TEST(GraphicCommandTest, TestPointPointMidpoint) {
        1:  202:    auto p1 = PointCommand({1,1});
        1:  203:    auto p2 = PointCommand({2,2});
        1:  204:    auto var = createMidpoint(p1, p2);
        1:  205:    auto new_line_pointer = std::get_if<PointCommand>(&var);
       1*:  206:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  207:    auto mp = new_line_pointer->getMovePoint();
       1*:  208:    ASSERT_FLOAT_EQ(mp.getX(), 2);
       1*:  209:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  210:}
------------------
_ZN46GraphicCommandTest_TestPointPointMidpoint_TestC2Ev:
        1:  201:TEST(GraphicCommandTest, TestPointPointMidpoint) {
        1:  201-block  0
------------------
_ZN46GraphicCommandTest_TestPointPointMidpoint_TestD0Ev:
        1:  201:TEST(GraphicCommandTest, TestPointPointMidpoint) {
        1:  201-block  0
------------------
_ZN46GraphicCommandTest_TestPointPointMidpoint_TestD2Ev:
        1:  201:TEST(GraphicCommandTest, TestPointPointMidpoint) {
        1:  201-block  0
------------------
_ZN46GraphicCommandTest_TestPointPointMidpoint_Test8TestBodyEv:
        1:  201:TEST(GraphicCommandTest, TestPointPointMidpoint) {
        1:  202:    auto p1 = PointCommand({1,1});
        1:  202-block  0
        1:  203:    auto p2 = PointCommand({2,2});
        1:  204:    auto var = createMidpoint(p1, p2);
        1:  205:    auto new_line_pointer = std::get_if<PointCommand>(&var);
        1:  205-block  0
       1*:  206:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  206-block  0
    %%%%%:  206-block  1
    %%%%%:  206-block  2
    %%%%%:  206-block  3
    %%%%%:  206-block  4
        1:  206-block  5
        1:  206-block  6
    $$$$$:  206-block  7
    $$$$$:  206-block  8
    $$$$$:  206-block  9
    $$$$$:  206-block 10
    $$$$$:  206-block 11
    $$$$$:  206-block 12
    $$$$$:  206-block 13
        1:  207:    auto mp = new_line_pointer->getMovePoint();
        1:  207-block  0
       1*:  208:    ASSERT_FLOAT_EQ(mp.getX(), 2);
        1:  208-block  0
    %%%%%:  208-block  1
    %%%%%:  208-block  2
    %%%%%:  208-block  3
    %%%%%:  208-block  4
        1:  208-block  5
        1:  208-block  6
    $$$$$:  208-block  7
    $$$$$:  208-block  8
    $$$$$:  208-block  9
    $$$$$:  208-block 10
    $$$$$:  208-block 11
       1*:  209:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  209-block  0
        1:  209-block  1
    %%%%%:  209-block  2
    %%%%%:  209-block  3
    %%%%%:  209-block  4
    %%%%%:  209-block  5
        1:  209-block  6
        1:  209-block  7
    $$$$$:  209-block  8
    $$$$$:  209-block  9
    $$$$$:  209-block 10
    $$$$$:  209-block 11
    $$$$$:  209-block 12
        1:  210:}
        1:  210-block  0
        1:  210-block  1
        1:  210-block  2
        1:  210-block  3
        1:  210-block  4
        1:  210-block  5
    $$$$$:  210-block  6
    $$$$$:  210-block  7
    $$$$$:  210-block  8
------------------
        -:  211:
        4:  212:TEST(GraphicCommandTest, TestPointMoveDifference) {
        1:  213:    auto p1 = PointCommand({1,1});
        1:  214:    auto m2 = MoveCommand({0,0});
        1:  215:    auto diff = countDifference(p1, m2);
       1*:  216:    ASSERT_FLOAT_EQ(diff, std::sqrt(2));
        1:  217:}
------------------
_ZN47GraphicCommandTest_TestPointMoveDifference_TestC2Ev:
        1:  212:TEST(GraphicCommandTest, TestPointMoveDifference) {
        1:  212-block  0
------------------
_ZN47GraphicCommandTest_TestPointMoveDifference_TestD0Ev:
        1:  212:TEST(GraphicCommandTest, TestPointMoveDifference) {
        1:  212-block  0
------------------
_ZN47GraphicCommandTest_TestPointMoveDifference_TestD2Ev:
        1:  212:TEST(GraphicCommandTest, TestPointMoveDifference) {
        1:  212-block  0
------------------
_ZN47GraphicCommandTest_TestPointMoveDifference_Test8TestBodyEv:
        1:  212:TEST(GraphicCommandTest, TestPointMoveDifference) {
        1:  213:    auto p1 = PointCommand({1,1});
        1:  213-block  0
        1:  214:    auto m2 = MoveCommand({0,0});
        1:  215:    auto diff = countDifference(p1, m2);
       1*:  216:    ASSERT_FLOAT_EQ(diff, std::sqrt(2));
        1:  216-block  0
        1:  216-block  1
    %%%%%:  216-block  2
    %%%%%:  216-block  3
    %%%%%:  216-block  4
    %%%%%:  216-block  5
        1:  216-block  6
        1:  216-block  7
    $$$$$:  216-block  8
    $$$$$:  216-block  9
    $$$$$:  216-block 10
    $$$$$:  216-block 11
    $$$$$:  216-block 12
        1:  217:}
        1:  217-block  0
        1:  217-block  1
        1:  217-block  2
        1:  217-block  3
    $$$$$:  217-block  4
    $$$$$:  217-block  5
------------------
        -:  218:
        4:  219:TEST(GraphicCommandTest, TestPointMoveMidpoint) {
        1:  220:    auto p1 = PointCommand({1,1});
        1:  221:    auto m2 = MoveCommand({2,2});
        1:  222:    auto var = createMidpoint(p1, m2);
        1:  223:    auto new_line_pointer = std::get_if<PointCommand>(&var);
       1*:  224:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  225:    auto mp = new_line_pointer->getMovePoint();
       1*:  226:    ASSERT_FLOAT_EQ(mp.getX(), 2);
       1*:  227:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  228:}
------------------
_ZN45GraphicCommandTest_TestPointMoveMidpoint_TestC2Ev:
        1:  219:TEST(GraphicCommandTest, TestPointMoveMidpoint) {
        1:  219-block  0
------------------
_ZN45GraphicCommandTest_TestPointMoveMidpoint_TestD0Ev:
        1:  219:TEST(GraphicCommandTest, TestPointMoveMidpoint) {
        1:  219-block  0
------------------
_ZN45GraphicCommandTest_TestPointMoveMidpoint_TestD2Ev:
        1:  219:TEST(GraphicCommandTest, TestPointMoveMidpoint) {
        1:  219-block  0
------------------
_ZN45GraphicCommandTest_TestPointMoveMidpoint_Test8TestBodyEv:
        1:  219:TEST(GraphicCommandTest, TestPointMoveMidpoint) {
        1:  220:    auto p1 = PointCommand({1,1});
        1:  220-block  0
        1:  221:    auto m2 = MoveCommand({2,2});
        1:  222:    auto var = createMidpoint(p1, m2);
        1:  223:    auto new_line_pointer = std::get_if<PointCommand>(&var);
        1:  223-block  0
       1*:  224:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  224-block  0
    %%%%%:  224-block  1
    %%%%%:  224-block  2
    %%%%%:  224-block  3
    %%%%%:  224-block  4
        1:  224-block  5
        1:  224-block  6
    $$$$$:  224-block  7
    $$$$$:  224-block  8
    $$$$$:  224-block  9
    $$$$$:  224-block 10
    $$$$$:  224-block 11
    $$$$$:  224-block 12
    $$$$$:  224-block 13
        1:  225:    auto mp = new_line_pointer->getMovePoint();
        1:  225-block  0
       1*:  226:    ASSERT_FLOAT_EQ(mp.getX(), 2);
        1:  226-block  0
    %%%%%:  226-block  1
    %%%%%:  226-block  2
    %%%%%:  226-block  3
    %%%%%:  226-block  4
        1:  226-block  5
        1:  226-block  6
    $$$$$:  226-block  7
    $$$$$:  226-block  8
    $$$$$:  226-block  9
    $$$$$:  226-block 10
    $$$$$:  226-block 11
       1*:  227:    ASSERT_FLOAT_EQ(mp.getY(), 2);
        1:  227-block  0
        1:  227-block  1
    %%%%%:  227-block  2
    %%%%%:  227-block  3
    %%%%%:  227-block  4
    %%%%%:  227-block  5
        1:  227-block  6
        1:  227-block  7
    $$$$$:  227-block  8
    $$$$$:  227-block  9
    $$$$$:  227-block 10
    $$$$$:  227-block 11
    $$$$$:  227-block 12
        1:  228:}
        1:  228-block  0
        1:  228-block  1
        1:  228-block  2
        1:  228-block  3
        1:  228-block  4
        1:  228-block  5
    $$$$$:  228-block  6
    $$$$$:  228-block  7
    $$$$$:  228-block  8
------------------
        -:  229:
        4:  230:TEST(GraphicCommandTest, TestMovePointDifference) {
        1:  231:    auto m1 = MoveCommand({0,0});
        1:  232:    auto p2 = PointCommand({1,1});
        1:  233:    auto diff = countDifference(m1, p2);
       1*:  234:    ASSERT_FLOAT_EQ(diff, 0);
        1:  235:}
------------------
_ZN47GraphicCommandTest_TestMovePointDifference_TestC2Ev:
        1:  230:TEST(GraphicCommandTest, TestMovePointDifference) {
        1:  230-block  0
------------------
_ZN47GraphicCommandTest_TestMovePointDifference_TestD0Ev:
        1:  230:TEST(GraphicCommandTest, TestMovePointDifference) {
        1:  230-block  0
------------------
_ZN47GraphicCommandTest_TestMovePointDifference_TestD2Ev:
        1:  230:TEST(GraphicCommandTest, TestMovePointDifference) {
        1:  230-block  0
------------------
_ZN47GraphicCommandTest_TestMovePointDifference_Test8TestBodyEv:
        1:  230:TEST(GraphicCommandTest, TestMovePointDifference) {
        1:  231:    auto m1 = MoveCommand({0,0});
        1:  231-block  0
        1:  232:    auto p2 = PointCommand({1,1});
        1:  233:    auto diff = countDifference(m1, p2);
       1*:  234:    ASSERT_FLOAT_EQ(diff, 0);
        1:  234-block  0
        1:  234-block  1
    %%%%%:  234-block  2
    %%%%%:  234-block  3
    %%%%%:  234-block  4
    %%%%%:  234-block  5
        1:  234-block  6
        1:  234-block  7
    $$$$$:  234-block  8
    $$$$$:  234-block  9
    $$$$$:  234-block 10
    $$$$$:  234-block 11
    $$$$$:  234-block 12
        1:  235:}
        1:  235-block  0
        1:  235-block  1
        1:  235-block  2
        1:  235-block  3
    $$$$$:  235-block  4
    $$$$$:  235-block  5
------------------
        -:  236:
        4:  237:TEST(GraphicCommandTest, TestMovePointMidpoint) {
        1:  238:    auto m1 = MoveCommand({2,2});
        1:  239:    auto p2 = PointCommand({1,1});
        -:  240:
        1:  241:    auto var = createMidpoint(m1, p2);
        1:  242:    auto new_line_pointer = std::get_if<PointCommand>(&var);
       1*:  243:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  244:    auto mp = new_line_pointer->getMovePoint();
       1*:  245:    ASSERT_FLOAT_EQ(mp.getX(), 1);
       1*:  246:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  247:}
------------------
_ZN45GraphicCommandTest_TestMovePointMidpoint_TestC2Ev:
        1:  237:TEST(GraphicCommandTest, TestMovePointMidpoint) {
        1:  237-block  0
------------------
_ZN45GraphicCommandTest_TestMovePointMidpoint_TestD0Ev:
        1:  237:TEST(GraphicCommandTest, TestMovePointMidpoint) {
        1:  237-block  0
------------------
_ZN45GraphicCommandTest_TestMovePointMidpoint_TestD2Ev:
        1:  237:TEST(GraphicCommandTest, TestMovePointMidpoint) {
        1:  237-block  0
------------------
_ZN45GraphicCommandTest_TestMovePointMidpoint_Test8TestBodyEv:
        1:  237:TEST(GraphicCommandTest, TestMovePointMidpoint) {
        1:  238:    auto m1 = MoveCommand({2,2});
        1:  238-block  0
        1:  239:    auto p2 = PointCommand({1,1});
        -:  240:
        1:  241:    auto var = createMidpoint(m1, p2);
        1:  242:    auto new_line_pointer = std::get_if<PointCommand>(&var);
        1:  242-block  0
       1*:  243:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  243-block  0
    %%%%%:  243-block  1
    %%%%%:  243-block  2
    %%%%%:  243-block  3
    %%%%%:  243-block  4
        1:  243-block  5
        1:  243-block  6
    $$$$$:  243-block  7
    $$$$$:  243-block  8
    $$$$$:  243-block  9
    $$$$$:  243-block 10
    $$$$$:  243-block 11
    $$$$$:  243-block 12
    $$$$$:  243-block 13
        1:  244:    auto mp = new_line_pointer->getMovePoint();
        1:  244-block  0
       1*:  245:    ASSERT_FLOAT_EQ(mp.getX(), 1);
        1:  245-block  0
    %%%%%:  245-block  1
    %%%%%:  245-block  2
    %%%%%:  245-block  3
    %%%%%:  245-block  4
        1:  245-block  5
        1:  245-block  6
    $$$$$:  245-block  7
    $$$$$:  245-block  8
    $$$$$:  245-block  9
    $$$$$:  245-block 10
    $$$$$:  245-block 11
       1*:  246:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  246-block  0
        1:  246-block  1
    %%%%%:  246-block  2
    %%%%%:  246-block  3
    %%%%%:  246-block  4
    %%%%%:  246-block  5
        1:  246-block  6
        1:  246-block  7
    $$$$$:  246-block  8
    $$$$$:  246-block  9
    $$$$$:  246-block 10
    $$$$$:  246-block 11
    $$$$$:  246-block 12
        1:  247:}
        1:  247-block  0
        1:  247-block  1
        1:  247-block  2
        1:  247-block  3
        1:  247-block  4
        1:  247-block  5
    $$$$$:  247-block  6
    $$$$$:  247-block  7
    $$$$$:  247-block  8
------------------
        -:  248:
        4:  249:TEST(GraphicCommandTest, TestMoveMoveDifference) {
        1:  250:    auto m1 = MoveCommand({0,0});
        1:  251:    auto m2 = MoveCommand({1,1});
        1:  252:    auto diff = countDifference(m1, m2);
       1*:  253:    ASSERT_FLOAT_EQ(diff, 0);
        1:  254:}
------------------
_ZN46GraphicCommandTest_TestMoveMoveDifference_TestC2Ev:
        1:  249:TEST(GraphicCommandTest, TestMoveMoveDifference) {
        1:  249-block  0
------------------
_ZN46GraphicCommandTest_TestMoveMoveDifference_TestD0Ev:
        1:  249:TEST(GraphicCommandTest, TestMoveMoveDifference) {
        1:  249-block  0
------------------
_ZN46GraphicCommandTest_TestMoveMoveDifference_TestD2Ev:
        1:  249:TEST(GraphicCommandTest, TestMoveMoveDifference) {
        1:  249-block  0
------------------
_ZN46GraphicCommandTest_TestMoveMoveDifference_Test8TestBodyEv:
        1:  249:TEST(GraphicCommandTest, TestMoveMoveDifference) {
        1:  250:    auto m1 = MoveCommand({0,0});
        1:  250-block  0
        1:  251:    auto m2 = MoveCommand({1,1});
        1:  252:    auto diff = countDifference(m1, m2);
       1*:  253:    ASSERT_FLOAT_EQ(diff, 0);
        1:  253-block  0
        1:  253-block  1
    %%%%%:  253-block  2
    %%%%%:  253-block  3
    %%%%%:  253-block  4
    %%%%%:  253-block  5
        1:  253-block  6
        1:  253-block  7
    $$$$$:  253-block  8
    $$$$$:  253-block  9
    $$$$$:  253-block 10
    $$$$$:  253-block 11
    $$$$$:  253-block 12
        1:  254:}
        1:  254-block  0
        1:  254-block  1
        1:  254-block  2
        1:  254-block  3
    $$$$$:  254-block  4
    $$$$$:  254-block  5
------------------
        -:  255:
        4:  256:TEST(GraphicCommandTest, TestMoveMoveMidpoint) {
        1:  257:    auto m1 = MoveCommand({2,2});
        1:  258:    auto m2 = MoveCommand({1,1});
        -:  259:
        1:  260:    auto var = createMidpoint(m1, m2);
        1:  261:    auto new_line_pointer = std::get_if<MoveCommand>(&var);
       1*:  262:    ASSERT_TRUE(new_line_pointer != nullptr);
        1:  263:    auto mp = new_line_pointer->getMovePoint();
       1*:  264:    ASSERT_FLOAT_EQ(mp.getX(), 1);
       1*:  265:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  266:}
------------------
_ZN44GraphicCommandTest_TestMoveMoveMidpoint_TestC2Ev:
        1:  256:TEST(GraphicCommandTest, TestMoveMoveMidpoint) {
        1:  256-block  0
------------------
_ZN44GraphicCommandTest_TestMoveMoveMidpoint_TestD0Ev:
        1:  256:TEST(GraphicCommandTest, TestMoveMoveMidpoint) {
        1:  256-block  0
------------------
_ZN44GraphicCommandTest_TestMoveMoveMidpoint_TestD2Ev:
        1:  256:TEST(GraphicCommandTest, TestMoveMoveMidpoint) {
        1:  256-block  0
------------------
_ZN44GraphicCommandTest_TestMoveMoveMidpoint_Test8TestBodyEv:
        1:  256:TEST(GraphicCommandTest, TestMoveMoveMidpoint) {
        1:  257:    auto m1 = MoveCommand({2,2});
        1:  257-block  0
        1:  258:    auto m2 = MoveCommand({1,1});
        -:  259:
        1:  260:    auto var = createMidpoint(m1, m2);
        1:  261:    auto new_line_pointer = std::get_if<MoveCommand>(&var);
        1:  261-block  0
       1*:  262:    ASSERT_TRUE(new_line_pointer != nullptr);
    %%%%%:  262-block  0
    %%%%%:  262-block  1
    %%%%%:  262-block  2
    %%%%%:  262-block  3
    %%%%%:  262-block  4
        1:  262-block  5
        1:  262-block  6
    $$$$$:  262-block  7
    $$$$$:  262-block  8
    $$$$$:  262-block  9
    $$$$$:  262-block 10
    $$$$$:  262-block 11
    $$$$$:  262-block 12
    $$$$$:  262-block 13
        1:  263:    auto mp = new_line_pointer->getMovePoint();
        1:  263-block  0
       1*:  264:    ASSERT_FLOAT_EQ(mp.getX(), 1);
        1:  264-block  0
    %%%%%:  264-block  1
    %%%%%:  264-block  2
    %%%%%:  264-block  3
    %%%%%:  264-block  4
        1:  264-block  5
        1:  264-block  6
    $$$$$:  264-block  7
    $$$$$:  264-block  8
    $$$$$:  264-block  9
    $$$$$:  264-block 10
    $$$$$:  264-block 11
       1*:  265:    ASSERT_FLOAT_EQ(mp.getY(), 1);
        1:  265-block  0
        1:  265-block  1
    %%%%%:  265-block  2
    %%%%%:  265-block  3
    %%%%%:  265-block  4
    %%%%%:  265-block  5
        1:  265-block  6
        1:  265-block  7
    $$$$$:  265-block  8
    $$$$$:  265-block  9
    $$$$$:  265-block 10
    $$$$$:  265-block 11
    $$$$$:  265-block 12
        1:  266:}
        1:  266-block  0
        1:  266-block  1
        1:  266-block  2
        1:  266-block  3
        1:  266-block  4
        1:  266-block  5
    $$$$$:  266-block  6
    $$$$$:  266-block  7
    $$$$$:  266-block  8
------------------
        -:  267:
        -:  268:
        -:  269:
        -:  270:
        -:  271:
        1:  272:int main(int argc, char **argv) {
        1:  273:  ::testing::InitGoogleTest(&argc, argv);
        1:  273-block  0
        1:  274:  return RUN_ALL_TESTS();
        -:  275:}
