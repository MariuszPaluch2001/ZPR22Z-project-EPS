        -:    0:Source:/home/kacper/Pulpit/zpr_eps/src/GraphicCommands.cc
        -:    0:Graph:/home/kacper/Pulpit/zpr_eps/cmake-build-debug-coverage/src/CMakeFiles/EPSCommands.dir/GraphicCommands.cc.gcno
        -:    0:Data:/home/kacper/Pulpit/zpr_eps/cmake-build-debug-coverage/src/CMakeFiles/EPSCommands.dir/GraphicCommands.cc.gcda
        -:    0:Runs:3
        -:    1://
        -:    2:// Created by kacper on 05.11.2022.
        -:    3://
        -:    4:#include <sstream>
        -:    5:
        -:    6:
        -:    7:#include "GraphicCommands.h"
        -:    8:
        -:    9:
        -:   10:const double MAX_DIFFERENCE = 1e10;
        -:   11:
        4:   12:std::string LeftLineCommand::toString() const {
        4:   13:  std::stringstream s;
        4:   13-block  0
        4:   14:  s << getMovePoint().getX() << " " << getMovePoint().getY() << " lineto";
        4:   14-block  0
        4:   14-block  1
        4:   14-block  2
        4:   14-block  3
    $$$$$:   14-block  4
    $$$$$:   14-block  5
        8:   15:  return s.str();
        4:   15-block  0
        4:   15-block  1
        4:   16:}
        4:   16-block  0
    $$$$$:   16-block  1
        -:   17:
        5:   18:std::string RightLineCommand::toString() const {
        5:   19:  std::stringstream s;
        5:   19-block  0
        5:   20:  s << getMovePoint().getX() << " " << getMovePoint().getY() << " l";
        5:   20-block  0
        5:   20-block  1
        5:   20-block  2
        5:   20-block  3
    $$$$$:   20-block  4
    $$$$$:   20-block  5
       10:   21:  return s.str();
        5:   21-block  0
        5:   21-block  1
        5:   22:}
        5:   22-block  0
    $$$$$:   22-block  1
        -:   23:
        4:   24:std::string PointCommand::toString() const {
        4:   25:  std::stringstream s;
        4:   25-block  0
        4:   26:  s << getMovePoint().getX() << " " << getMovePoint().getY()
        4:   26-block  0
        4:   26-block  1
        4:   26-block  2
    $$$$$:   26-block  3
    $$$$$:   26-block  4
        4:   27:    << " 1 1 r p2";
        4:   27-block  0
        8:   28:  return s.str();
        4:   28-block  0
        4:   28-block  1
        4:   29:}
        4:   29-block  0
    $$$$$:   29-block  1
        -:   30:
        1:   31:std::string MoveCommand::toString() const {
        1:   32:    std::stringstream s;
        1:   32-block  0
        1:   33:    s << getMovePoint().getX() << " " << getMovePoint().getY()
        1:   33-block  0
        1:   33-block  1
        1:   33-block  2
    $$$$$:   33-block  3
    $$$$$:   33-block  4
        1:   34:      << " m";
        1:   34-block  0
        2:   35:    return s.str();
        1:   35-block  0
        1:   35-block  1
        1:   36:}
        1:   36-block  0
    $$$$$:   36-block  1
        -:   37:
        3:   38:double countDifference(const LeftLineCommand & ll1, const LeftLineCommand & ll2) {
        3:   39:    return countDistanceBetweenConjoinedDirections(ll1.getMovePoint(), ll2.getMovePoint());
        3:   39-block  0
        3:   39-block  1
        3:   39-block  2
        3:   39-block  3
    $$$$$:   39-block  4
        -:   40:}
        -:   41:
        2:   42:double countDifference(const LeftLineCommand & ll1, const RightLineCommand & rl2) {
        2:   43:    return MAX_DIFFERENCE;
        2:   43-block  0
        -:   44:
        -:   45:}
        -:   46:
        2:   47:double countDifference(const RightLineCommand & rl1, const LeftLineCommand & ll2) {
        2:   48:    return MAX_DIFFERENCE;
        2:   48-block  0
        -:   49:}
        -:   50:
        -:   51:
        2:   52:double countDifference(const RightLineCommand & rl1, const RightLineCommand & rl2) {
        2:   53:    return countDistanceBetweenConjoinedDirections(rl1.getMovePoint(), rl2.getMovePoint());
        2:   53-block  0
        2:   53-block  1
        2:   53-block  2
        2:   53-block  3
    $$$$$:   53-block  4
        -:   54:
        -:   55:}
        -:   56:
       30:   57:double countDifference(const PointCommand & p1, const PointCommand & p2) {
       30:   58:    return length(p1.getMovePoint() - p2.getMovePoint());
       30:   58-block  0
       30:   58-block  1
       30:   58-block  2
       30:   58-block  3
       30:   58-block  4
    $$$$$:   58-block  5
    $$$$$:   58-block  6
        -:   59:}
        1:   60:double countDifference(const PointCommand & p1, const MoveCommand & m2) {
        1:   61:    return length(p1.getMovePoint() - m2.getMovePoint());
        1:   61-block  0
        1:   61-block  1
        1:   61-block  2
        1:   61-block  3
        1:   61-block  4
    $$$$$:   61-block  5
    $$$$$:   61-block  6
        -:   62:}
        -:   63:
        1:   64:double countDifference(const MoveCommand & m1, const PointCommand & p2) {
        1:   65:    return 0;
        1:   65-block  0
        -:   66:}
        1:   67:double countDifference(const MoveCommand & m1, const MoveCommand & m2) {
        1:   68:    return 0;
        1:   68-block  0
        -:   69:}
        -:   70:
        2:   71:RelativeCommandVar createMidpoint(const LeftLineCommand & ll1, const LeftLineCommand & ll2) {
        2:   72:    return LeftLineCommand(ll1.getMovePoint() + ll2.getMovePoint());
        2:   72-block  0
        2:   72-block  1
        2:   72-block  2
    $$$$$:   72-block  3
        -:   73:}
        1:   74:RelativeCommandVar createMidpoint(const LeftLineCommand & ll1, const RightLineCommand & rl2) {
        1:   75:    return ll1;
        1:   75-block  0
        -:   76:}
        1:   77:RelativeCommandVar createMidpoint(const RightLineCommand & rl1, const LeftLineCommand & ll2) {
        1:   78:    return rl1;
        1:   78-block  0
        -:   79:}
        2:   80:RelativeCommandVar createMidpoint(const RightLineCommand & rl1, const RightLineCommand & rl2) {
        2:   81:    return RightLineCommand(rl1.getMovePoint() + rl2.getMovePoint());
        2:   81-block  0
        2:   81-block  1
        2:   81-block  2
    $$$$$:   81-block  3
        -:   82:}
        -:   83:
        3:   84:AbsoluteCommandVar createMidpoint(const PointCommand & p1, const PointCommand & p2) {
        3:   85:    return p2;
        3:   85-block  0
        -:   86:}
        1:   87:AbsoluteCommandVar createMidpoint(const PointCommand & p1, const MoveCommand & m2) {
        1:   88:    return PointCommand(m2.getMovePoint());
        1:   88-block  0
        -:   89:}
        1:   90:AbsoluteCommandVar createMidpoint(const MoveCommand & m1, const PointCommand & p2) {
        1:   91:    return p2;
        1:   91-block  0
        -:   92:}
        1:   93:AbsoluteCommandVar createMidpoint(const MoveCommand & m1, const MoveCommand & m2) {
        1:   94:    return m2;
        1:   94-block  0
        -:   95:}
